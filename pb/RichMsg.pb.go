// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: pb/RichMsg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForwardExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardOrgId           int32  `protobuf:"varint,1,opt,name=forward_orgId,json=forwardOrgId,proto3" json:"forward_orgId,omitempty"`
	ForwardOrgUin          string `protobuf:"bytes,2,opt,name=forward_orgUin,json=forwardOrgUin,proto3" json:"forward_orgUin,omitempty"`
	ForwardOrgUinType      int32  `protobuf:"varint,3,opt,name=forward_orgUinType,json=forwardOrgUinType,proto3" json:"forward_orgUinType,omitempty"`
	ForwardOrgUrl          string `protobuf:"bytes,4,opt,name=forward_orgUrl,json=forwardOrgUrl,proto3" json:"forward_orgUrl,omitempty"`
	ForwardThumbPath       string `protobuf:"bytes,5,opt,name=forward_thumbPath,json=forwardThumbPath,proto3" json:"forward_thumbPath,omitempty"`
	ForwardOrgFileSizeType int32  `protobuf:"varint,6,opt,name=forward_orgFileSizeType,json=forwardOrgFileSizeType,proto3" json:"forward_orgFileSizeType,omitempty"`
}

func (x *ForwardExtra) Reset() {
	*x = ForwardExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_RichMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardExtra) ProtoMessage() {}

func (x *ForwardExtra) ProtoReflect() protoreflect.Message {
	mi := &file_pb_RichMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardExtra.ProtoReflect.Descriptor instead.
func (*ForwardExtra) Descriptor() ([]byte, []int) {
	return file_pb_RichMsg_proto_rawDescGZIP(), []int{0}
}

func (x *ForwardExtra) GetForwardOrgId() int32 {
	if x != nil {
		return x.ForwardOrgId
	}
	return 0
}

func (x *ForwardExtra) GetForwardOrgUin() string {
	if x != nil {
		return x.ForwardOrgUin
	}
	return ""
}

func (x *ForwardExtra) GetForwardOrgUinType() int32 {
	if x != nil {
		return x.ForwardOrgUinType
	}
	return 0
}

func (x *ForwardExtra) GetForwardOrgUrl() string {
	if x != nil {
		return x.ForwardOrgUrl
	}
	return ""
}

func (x *ForwardExtra) GetForwardThumbPath() string {
	if x != nil {
		return x.ForwardThumbPath
	}
	return ""
}

func (x *ForwardExtra) GetForwardOrgFileSizeType() int32 {
	if x != nil {
		return x.ForwardOrgFileSizeType
	}
	return 0
}

type PicRec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalPath                string        `protobuf:"bytes,1,opt,name=localPath,proto3" json:"localPath,omitempty"`
	Size                     int32         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Type                     int32         `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	IsRead                   bool          `protobuf:"varint,4,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Uuid                     string        `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Md5                      string        `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	ServerStorageSource      string        `protobuf:"bytes,7,opt,name=serverStorageSource,proto3" json:"serverStorageSource,omitempty"`
	ThumbMsgUrl              string        `protobuf:"bytes,8,opt,name=thumbMsgUrl,proto3" json:"thumbMsgUrl,omitempty"`
	BigMsgUrl                string        `protobuf:"bytes,9,opt,name=bigMsgUrl,proto3" json:"bigMsgUrl,omitempty"`
	RawMsgUrl                string        `protobuf:"bytes,10,opt,name=rawMsgUrl,proto3" json:"rawMsgUrl,omitempty"`
	FileSizeFlag             int32         `protobuf:"varint,11,opt,name=fileSizeFlag,proto3" json:"fileSizeFlag,omitempty"`
	UiOperatorFlag           int32         `protobuf:"varint,12,opt,name=uiOperatorFlag,proto3" json:"uiOperatorFlag,omitempty"`
	ForwardInfo              *ForwardExtra `protobuf:"bytes,13,opt,name=forwardInfo,proto3" json:"forwardInfo,omitempty"`
	Version                  int32         `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
	IsReport                 int32         `protobuf:"varint,15,opt,name=isReport,proto3" json:"isReport,omitempty"`
	GroupFileID              uint64        `protobuf:"varint,16,opt,name=groupFileID,proto3" json:"groupFileID,omitempty"`
	LocalUUID                string        `protobuf:"bytes,17,opt,name=localUUID,proto3" json:"localUUID,omitempty"`
	PreDownState             int32         `protobuf:"varint,18,opt,name=preDownState,proto3" json:"preDownState,omitempty"`
	PreDownNetwork           int32         `protobuf:"varint,19,opt,name=preDownNetwork,proto3" json:"preDownNetwork,omitempty"`
	Previewed                int32         `protobuf:"varint,20,opt,name=previewed,proto3" json:"previewed,omitempty"`
	Uint32ThumbWidth         uint32        `protobuf:"varint,21,opt,name=uint32_thumb_width,json=uint32ThumbWidth,proto3" json:"uint32_thumb_width,omitempty"`
	Uint32ThumbHeight        uint32        `protobuf:"varint,22,opt,name=uint32_thumb_height,json=uint32ThumbHeight,proto3" json:"uint32_thumb_height,omitempty"`
	Uint32Width              uint32        `protobuf:"varint,23,opt,name=uint32_width,json=uint32Width,proto3" json:"uint32_width,omitempty"`
	Uint32Height             uint32        `protobuf:"varint,24,opt,name=uint32_height,json=uint32Height,proto3" json:"uint32_height,omitempty"`
	Uint32ImageType          uint32        `protobuf:"varint,25,opt,name=uint32_image_type,json=uint32ImageType,proto3" json:"uint32_image_type,omitempty"`
	Uint32ShowLen            uint32        `protobuf:"varint,26,opt,name=uint32_show_len,json=uint32ShowLen,proto3" json:"uint32_show_len,omitempty"`
	Uint32DownloadLen        uint32        `protobuf:"varint,27,opt,name=uint32_download_len,json=uint32DownloadLen,proto3" json:"uint32_download_len,omitempty"`
	Uint32CurrentLen         uint32        `protobuf:"varint,28,opt,name=uint32_current_len,json=uint32CurrentLen,proto3" json:"uint32_current_len,omitempty"`
	NotPreDownloadReason     uint32        `protobuf:"varint,29,opt,name=notPreDownloadReason,proto3" json:"notPreDownloadReason,omitempty"`
	EnableEnc                bool          `protobuf:"varint,30,opt,name=enableEnc,proto3" json:"enableEnc,omitempty"`
	BigThumbMsgUrl           string        `protobuf:"bytes,31,opt,name=bigThumbMsgUrl,proto3" json:"bigThumbMsgUrl,omitempty"`
	BytesPbReserved          []byte        `protobuf:"bytes,32,opt,name=bytes_pb_reserved,json=bytesPbReserved,proto3" json:"bytes_pb_reserved,omitempty"`
	BoolStoryPicSendToRecent bool          `protobuf:"varint,33,opt,name=bool_story_pic_send_to_recent,json=boolStoryPicSendToRecent,proto3" json:"bool_story_pic_send_to_recent,omitempty"`
}

func (x *PicRec) Reset() {
	*x = PicRec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_RichMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicRec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicRec) ProtoMessage() {}

func (x *PicRec) ProtoReflect() protoreflect.Message {
	mi := &file_pb_RichMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicRec.ProtoReflect.Descriptor instead.
func (*PicRec) Descriptor() ([]byte, []int) {
	return file_pb_RichMsg_proto_rawDescGZIP(), []int{1}
}

func (x *PicRec) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *PicRec) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PicRec) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PicRec) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *PicRec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PicRec) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *PicRec) GetServerStorageSource() string {
	if x != nil {
		return x.ServerStorageSource
	}
	return ""
}

func (x *PicRec) GetThumbMsgUrl() string {
	if x != nil {
		return x.ThumbMsgUrl
	}
	return ""
}

func (x *PicRec) GetBigMsgUrl() string {
	if x != nil {
		return x.BigMsgUrl
	}
	return ""
}

func (x *PicRec) GetRawMsgUrl() string {
	if x != nil {
		return x.RawMsgUrl
	}
	return ""
}

func (x *PicRec) GetFileSizeFlag() int32 {
	if x != nil {
		return x.FileSizeFlag
	}
	return 0
}

func (x *PicRec) GetUiOperatorFlag() int32 {
	if x != nil {
		return x.UiOperatorFlag
	}
	return 0
}

func (x *PicRec) GetForwardInfo() *ForwardExtra {
	if x != nil {
		return x.ForwardInfo
	}
	return nil
}

func (x *PicRec) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PicRec) GetIsReport() int32 {
	if x != nil {
		return x.IsReport
	}
	return 0
}

func (x *PicRec) GetGroupFileID() uint64 {
	if x != nil {
		return x.GroupFileID
	}
	return 0
}

func (x *PicRec) GetLocalUUID() string {
	if x != nil {
		return x.LocalUUID
	}
	return ""
}

func (x *PicRec) GetPreDownState() int32 {
	if x != nil {
		return x.PreDownState
	}
	return 0
}

func (x *PicRec) GetPreDownNetwork() int32 {
	if x != nil {
		return x.PreDownNetwork
	}
	return 0
}

func (x *PicRec) GetPreviewed() int32 {
	if x != nil {
		return x.Previewed
	}
	return 0
}

func (x *PicRec) GetUint32ThumbWidth() uint32 {
	if x != nil {
		return x.Uint32ThumbWidth
	}
	return 0
}

func (x *PicRec) GetUint32ThumbHeight() uint32 {
	if x != nil {
		return x.Uint32ThumbHeight
	}
	return 0
}

func (x *PicRec) GetUint32Width() uint32 {
	if x != nil {
		return x.Uint32Width
	}
	return 0
}

func (x *PicRec) GetUint32Height() uint32 {
	if x != nil {
		return x.Uint32Height
	}
	return 0
}

func (x *PicRec) GetUint32ImageType() uint32 {
	if x != nil {
		return x.Uint32ImageType
	}
	return 0
}

func (x *PicRec) GetUint32ShowLen() uint32 {
	if x != nil {
		return x.Uint32ShowLen
	}
	return 0
}

func (x *PicRec) GetUint32DownloadLen() uint32 {
	if x != nil {
		return x.Uint32DownloadLen
	}
	return 0
}

func (x *PicRec) GetUint32CurrentLen() uint32 {
	if x != nil {
		return x.Uint32CurrentLen
	}
	return 0
}

func (x *PicRec) GetNotPreDownloadReason() uint32 {
	if x != nil {
		return x.NotPreDownloadReason
	}
	return 0
}

func (x *PicRec) GetEnableEnc() bool {
	if x != nil {
		return x.EnableEnc
	}
	return false
}

func (x *PicRec) GetBigThumbMsgUrl() string {
	if x != nil {
		return x.BigThumbMsgUrl
	}
	return ""
}

func (x *PicRec) GetBytesPbReserved() []byte {
	if x != nil {
		return x.BytesPbReserved
	}
	return nil
}

func (x *PicRec) GetBoolStoryPicSendToRecent() bool {
	if x != nil {
		return x.BoolStoryPicSendToRecent
	}
	return false
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*Elem `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_RichMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_RichMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_pb_RichMsg_proto_rawDescGZIP(), []int{2}
}

func (x *Msg) GetElems() []*Elem {
	if x != nil {
		return x.Elems
	}
	return nil
}

type Elem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextMsg       []byte         `protobuf:"bytes,1,opt,name=textMsg,proto3" json:"textMsg,omitempty"`
	PicMsg        []byte         `protobuf:"bytes,2,opt,name=picMsg,proto3" json:"picMsg,omitempty"`
	MarkfaceMsg   *MarketFaceRec `protobuf:"bytes,3,opt,name=markfaceMsg,proto3" json:"markfaceMsg,omitempty"`
	SourceMsgInfo string         `protobuf:"bytes,4,opt,name=sourceMsgInfo,proto3" json:"sourceMsgInfo,omitempty"`
}

func (x *Elem) Reset() {
	*x = Elem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_RichMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Elem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Elem) ProtoMessage() {}

func (x *Elem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_RichMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Elem.ProtoReflect.Descriptor instead.
func (*Elem) Descriptor() ([]byte, []int) {
	return file_pb_RichMsg_proto_rawDescGZIP(), []int{3}
}

func (x *Elem) GetTextMsg() []byte {
	if x != nil {
		return x.TextMsg
	}
	return nil
}

func (x *Elem) GetPicMsg() []byte {
	if x != nil {
		return x.PicMsg
	}
	return nil
}

func (x *Elem) GetMarkfaceMsg() *MarketFaceRec {
	if x != nil {
		return x.MarkfaceMsg
	}
	return nil
}

func (x *Elem) GetSourceMsgInfo() string {
	if x != nil {
		return x.SourceMsgInfo
	}
	return ""
}

type MarketFaceRec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarketFaceRec) Reset() {
	*x = MarketFaceRec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_RichMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketFaceRec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFaceRec) ProtoMessage() {}

func (x *MarketFaceRec) ProtoReflect() protoreflect.Message {
	mi := &file_pb_RichMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFaceRec.ProtoReflect.Descriptor instead.
func (*MarketFaceRec) Descriptor() ([]byte, []int) {
	return file_pb_RichMsg_proto_rawDescGZIP(), []int{4}
}

var File_pb_RichMsg_proto protoreflect.FileDescriptor

var file_pb_RichMsg_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x62, 0x2f, 0x52, 0x69, 0x63, 0x68, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x96, 0x02, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x72, 0x67, 0x55, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x67,
	0x55, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6f,
	0x72, 0x67, 0x55, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x67, 0x55, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x72,
	0x67, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x4f, 0x72, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x17, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x6f, 0x72, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xbb, 0x09, 0x0a, 0x06, 0x50, 0x69, 0x63, 0x52, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x30,
	0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4d, 0x73, 0x67, 0x55,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x69, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x32, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6c, 0x65, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x50, 0x72, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x50, 0x72, 0x65, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x69, 0x67, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x69, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c,
	0x12, 0x2a, 0x0a, 0x11, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x50, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x1d,
	0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x62, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x69,
	0x63, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x25, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x05, 0x65,
	0x6c, 0x65, 0x6d, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x04, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x74, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x12,
	0x33, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x66, 0x61, 0x63,
	0x65, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_RichMsg_proto_rawDescOnce sync.Once
	file_pb_RichMsg_proto_rawDescData = file_pb_RichMsg_proto_rawDesc
)

func file_pb_RichMsg_proto_rawDescGZIP() []byte {
	file_pb_RichMsg_proto_rawDescOnce.Do(func() {
		file_pb_RichMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_RichMsg_proto_rawDescData)
	})
	return file_pb_RichMsg_proto_rawDescData
}

var file_pb_RichMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pb_RichMsg_proto_goTypes = []any{
	(*ForwardExtra)(nil),  // 0: pb.ForwardExtra
	(*PicRec)(nil),        // 1: pb.PicRec
	(*Msg)(nil),           // 2: pb.Msg
	(*Elem)(nil),          // 3: pb.Elem
	(*MarketFaceRec)(nil), // 4: pb.MarketFaceRec
}
var file_pb_RichMsg_proto_depIdxs = []int32{
	0, // 0: pb.PicRec.forwardInfo:type_name -> pb.ForwardExtra
	3, // 1: pb.Msg.elems:type_name -> pb.Elem
	4, // 2: pb.Elem.markfaceMsg:type_name -> pb.MarketFaceRec
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pb_RichMsg_proto_init() }
func file_pb_RichMsg_proto_init() {
	if File_pb_RichMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_RichMsg_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ForwardExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_RichMsg_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PicRec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_RichMsg_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_RichMsg_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Elem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_RichMsg_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MarketFaceRec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_RichMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_RichMsg_proto_goTypes,
		DependencyIndexes: file_pb_RichMsg_proto_depIdxs,
		MessageInfos:      file_pb_RichMsg_proto_msgTypes,
	}.Build()
	File_pb_RichMsg_proto = out.File
	file_pb_RichMsg_proto_rawDesc = nil
	file_pb_RichMsg_proto_goTypes = nil
	file_pb_RichMsg_proto_depIdxs = nil
}
